"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3804],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),m=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=m(e.components);return r.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=m(t),d=a,h=u["".concat(c,".").concat(d)]||u[d]||l[d]||o;return t?r.createElement(h,s(s({ref:n},p),{},{components:t})):r.createElement(h,s({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var m=2;m<o;m++)s[m]=t[m];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},94:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>m});var r=t(7462),a=(t(7294),t(3905));const o={title:"Warm vs Frozen"},s="Warm vs Frozen",i={unversionedId:"schemas/warm-vs-frozen/index",id:"schemas/warm-vs-frozen/index",title:"Warm vs Frozen",description:"Composition",source:"@site/docs/4-schemas/2-warm-vs-frozen/index.md",sourceDirName:"4-schemas/2-warm-vs-frozen",slug:"/schemas/warm-vs-frozen/",permalink:"/docs/schemas/warm-vs-frozen/",draft:!1,tags:[],version:"current",frontMatter:{title:"Warm vs Frozen"},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/docs/schemas/usage/"},next:{title:"Defaults & Links",permalink:"/docs/schemas/defaults-and-links/"}},c={},m=[{value:"Composition",id:"composition",level:2},{value:"Extension",id:"extension",level:2}],p={toc:m};function l(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"warm-vs-frozen"},"Warm vs Frozen"),(0,a.kt)("h2",{id:"composition"},"Composition"),(0,a.kt)("p",null,"Prior to being wrapped in a ",(0,a.kt)("inlineCode",{parentName:"p"},"schema")," declaration, schemas are called ",(0,a.kt)("strong",{parentName:"p"},"warm:")," They are ",(0,a.kt)("strong",{parentName:"p"},"not validated")," (at run-time) and can be used to build other schemas. By inspecting their types, you can see that they are prefixed with ",(0,a.kt)("inlineCode",{parentName:"p"},"$"),"."),(0,a.kt)("p",null,"Once ",(0,a.kt)("strong",{parentName:"p"},"frozen"),", validation is applied and building methods are stripped:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'const $nameSchema = string()\n// => $PrimitiveAttribute<"string">\n\nconst nameSchema = $nameSchema.freeze()\n// => PrimitiveAttribute<"string">\n\n// \ud83d\udc47 `schema` uses `.freeze()` under the hood\nconst pokemonSchema = schema({\n  name: $nameSchema\n})\n// => Schema<{\n//   name: PrimitiveAttribute<"string">\n// }>\n')),(0,a.kt)("p",null,"The main takeaway is that ",(0,a.kt)("strong",{parentName:"p"},"warm schemas can be composed")," while ",(0,a.kt)("strong",{parentName:"p"},"frozen schemas cannot"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const nameSchema = string();\n\nconst pokemonSchema = schema({\n  // \ud83d\udc4d No problem\n  pokemonName: nameSchema,\n  ...\n});\n\nconst pokedexSchema = schema({\n  // \u274c Not possible\n  pokemon: pokemonSchema,\n  ...\n});\n")),(0,a.kt)("h2",{id:"extension"},"Extension"),(0,a.kt)("p",null,"However, ",(0,a.kt)("strong",{parentName:"p"},"you can extend a schema")," via its ",(0,a.kt)("inlineCode",{parentName:"p"},".and(...)")," method:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const extendedPokemonSchema = pokemonSchema.and({\n  newAttribute: string()\n})\n")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Conflicts in attribute names or ",(0,a.kt)("inlineCode",{parentName:"p"},"savedAs")," properties result in an error.")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},".and(...)")," method also accepts functions that return a (warm) schema. In this case, the previous schema is provided as an argument:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const extendSchema = mySchema.and(prevSchema => ({\n  newAttribute: string(),\n  ...\n}))\n")),(0,a.kt)("p",null,"This is particularly useful for ",(0,a.kt)("a",{parentName:"p",href:"/docs/schemas/defaults-and-links/"},"Defaults & Links"),"."))}l.isMDXComponent=!0}}]);